name: continuous-integration

on:
  push:
    branches:
      - main
      - restructuring
  pull_request:
    branches:
      - main
      - restructuring
  workflow_dispatch:

jobs:

  test:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 240
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-20.04
          - macos-12
        mpi:
          - mpich
          - openmpi
        py:
          - "3.7"
          - "3.8"
          - "3.9"
          - "3.10"

    steps:
    - name: Configure hostname
      if:   runner.os == 'Linux' || runner.os == 'macOS'
      run:  echo 127.0.0.1 `hostname` | sudo tee -a /etc/hosts > /dev/null

    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup MPI (${{ matrix.mpi }})
      uses: mpi4py/setup-mpi@v1
      with:
        mpi: ${{ matrix.mpi }}

    - name: Use Python ${{ matrix.py }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.py }}
        architecture: x64

    - name: Install
      run: python -m pip install .[mpi,test,ai]

    - name: Test mpiexec_pod
      run: mpiexec -n 2 python -m coverage run tests/test_pod_parallel.py

    - name: Test mpiexec_spod
      run: mpiexec -n 2 python -m coverage run tests/test_spod_parallel.py

    - name: Test mpiexec_utils
      run: mpiexec -n 2 python -m coverage run tests/test_utils_parallel.py

    - name: Pytest --with-mpi
      run: pytest --cov=pyspod --cov-report=xml tests/ --with-mpi -v

    # - name: Codecov
    #   uses: codecov/codecov-action@v3.1.1

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        fail_ci_if_error: true
        files: ./coverage.xml
        verbose: true

  test-no-mpi:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 120
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-22.04
          - macos-12
        py:
          - "3"

    steps:

    - name: Checkout
      uses: actions/checkout@v3

    - name: Use Python ${{ matrix.py }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.py }}
        architecture: x64

    - name: Install
      run: python -m pip install .[test,ai]

    - name: Test package
      run: pytest -v tests/
